x <- c(1612, 1352, 1256, 922, 1560, 1456, 2324)
y <- c(1082, 1300, 1092, 1040, 910 , 1248, 1092, 1040, 1092, 1288)
t.test(x, y, var.equal = TRUE)
var.test(x, y)
# 3  use the Welch's test
t.test(x,y)
par(mfrow = c(1, 2))
qqnorm(x, main = "X", col = 4)
qqline(x, lty = 2)
qqnorm(y, main = "Y", col = 4)
qqline(y, lty = 2)
par(mfrow = c(1, 2))
qqnorm(x, main = "X", col = 4)
qqline(x, lty = 2)
qqnorm(y, main = "Y", col = 4)
qqline(y, lty = 2)
wilcox.test(x, y, exact = FALSE)
wilcox.test(x, y, exact = FALSE)
y2 <- y
y2[5] <- 470
wilcox.test(x, y2, exact = FALSE)
setwd("F:/unimelb/2019S2/MAST90058 Elements of Statistics/mast20005-mast90058-semester2-2019/labs/data")
butterfat <- read.table("butterfat.txt")[, 1]
x.bar <- mean(butterfat)
s <- sd(butterfat)
b <- c(0, seq(374, 624, 50), 1000) # class boundaries
O <- table(cut(butterfat, breaks = b)) # observed counts
O
prob <- rep(0, 7)
for (k in 1:7)
prob[k] <- pnorm(b[k + 1], x.bar, s) - pnorm(b[k], x.bar, s)
E <- prob * length(butterfat) # expected frequencies
b <- c(0, seq(374, 624, 50), 1000) # class boundaries
O <- table(cut(butterfat, breaks = b)) # observed counts
O
##
## (0,374] (374,424] (424,474] (474,524] (524,574] (574,624]
##    5         9       16         22        15       13
## (624,1e+03]
##     10
##################################################
# 3 compute expected frequencies
## prob <- rep(0, 7)
## prob[1] <- pnorm(b[2], x.bar, s) - pnorm(b[1], x.bar, s)
## ...
## prob[7] <- pnorm(b[8], x.bar, s) - pnorm(b[7], x.bar, s)
## E <- prob * length(butterfat)
prob <- rep(0, 7)
for (k in 1:7)
prob[k] <- pnorm(b[k + 1], x.bar, s) - pnorm(b[k], x.bar, s)
E <- prob * length(butterfat) # expected frequencies
# then carry out the test
C <- sum((O - E)^2 / E) # chi-squared statistic
d1 <- length(O) # number of classes
qchisq(0.95, d1 - 3) # critical value
## [1] 9.487729
1 - pchisq(C, d1 - 3) # p-value
## [1] 0.9076048
cbind(O, E)
## O E
## (0,374] 5 5.222232
## (374,424] 9 9.042687
## (424,474] 16 15.768114
## (474,524] 22 20.020264
## (524,574] 15 18.509602
## (574,624] 13 12.460972
## (624,1e+03] 10 8.976128
# 4 chi-squared test
chisq.test(O, p = prob)
1 - pchisq(1.0144, d1 - 3)
## [1] 0.9076047
X.raw <- c(171, 93, 82, 62, 54, 11, 31, 55, 43, 11, 27, 57)
X <- matrix(X.raw, nrow = 4, byrow = TRUE)
test <- chisq.test(X)
test
X.raw <- c(171, 93, 82, 62, 54, 11, 31, 55, 43, 11, 27, 57)
X <- matrix(X.raw, nrow = 4, byrow = TRUE) #which means a colum has 4 number
test <- chisq.test(X)
test
X.raw <- c(171, 93, 82, 62, 54, 11, 31, 55, 43, 11, 27, 57)
#X <- matrix(X.raw, nrow = 4, byrow = TRUE) #which means a colum has 4 number
X <- matrix(X.raw, nrow = 2, byrow = FALSE)
test <- chisq.test(X)
test
X.raw <- c(171, 93, 82, 62, 54, 11, 31, 55, 43, 11, 27, 57)
#X <- matrix(X.raw, nrow = 4, byrow = TRUE) #which means a colum has 4 number
X <- matrix(X.raw, nrow = 3, byrow = FALSE)
test <- chisq.test(X)
test
X
X <- matrix(X.raw, nrow = 4, byrow = TRUE)
X
X <- matrix(X.raw, nrow = 4, byrow = TRUE) # 4 rows
X <- matrix(X.raw, nrow = 4, byrow = FALSE) # 4 rows
X
X <- matrix(X.raw, nrow = 4, byrow = FALSE) # 4 rows, fill in numbers by
X
test$expected
E.1 <- sum(X[, 1]) * sum(X[1, ]) / sum(X)
E.1
## [1] 136.5136
O.1 <- 171
(O.1 - E.1)^2 / E.1
## [1] 8.712022
x <- c(0,8,42) # observed value
prob <- c(0.1,0.2,0.7) #expected prob
chisq.test(x,p = prob)
wilcox.test(x, mu = 40, alternative = "less")
binom.test(sum(x > 40),length(x),alternative = "less")
x = c(254,69,87,22) #observed
ratios <- c(9/16, 3/16, 3/16, 1/16)
chisq.test(x,p = ratios)
chisq.test(x,p = ratios,rescale.p = TRUE)
nurses <- rbind(c(95, 36, 71, 21, 45, 32),
c(53, 26, 43, 18, 32, 28))
chisq.test(nurses)
high-protein <- c(134,146,104,119,124,161,112,83,113,129,97,123)
high_protein <- c(134,146,104,119,124,161,112,83,113,129,97,123)
high_protein <- c(134,146,104,119,124,161,112,83,113,129,97,123)
low_protein <- c(80,118,101,85,107,132,94)
binom.test(sum(high_protein > 110),length(high_protein),alternative = "less")
wilcox.test(high_protein,low_protein)
wilcox.test(high_protein,low_protein,alternative = "larger")
wilcox.test(high_protein,low_protein,alternative = "greater")
pwilcox(63,12,7)
1- pwilcox(63,12,7)
t.test(high_protein,low_protein,var.equal = TRUE)
t.test(high_protein,low_protein,var.equal = TRUE,alternative = "greater")
var.test(high_protein,low_protein)
setwd("F:/unimelb/2019S2/MAST90058 Elements of Statistics/mast20005-mast90058-semester2-2019/labs/data")
data <- read.table("corn.txt", header = TRUE)
Corn <- factor(data[, 1])
Yield <- data[, 2]
Corn
table(Corn)
Yield
tapply(Yield, list(Corn), mean) # group means
boxplot(Yield ~ Corn)
Corn
table(Corn)
Yield
## 68.82 86.84 90.16 61.58 76.99 75.69 78.84 73.51 74.30 77.87 80.65 74.57 78.73 76.18 83.58 70.75
tapply(Yield, list(Corn), mean) # group means
boxplot(Yield ~ Corn)
boxplot(Yield ~ Corn)
m1 <- lm(Yield ~ Corn)
qqnorm(residuals(m1))
qqnorm(residuals(m1))
summary(m1)
anova(m1)
pairwise.t.test(Yield, Corn, pool.sd = FALSE, p.adjust.method = "none")
t.test(Yield[Corn == 1], Yield[Corn == 3])
x <- rnorm(5)
y <- rnorm(5)
test.result <- t.test(x, y, var.equal = TRUE)
names(test.result)
test.result$statistic
ts <- replicate(1000,t.test(rnorm(5), rnorm(5), var.equal = TRUE)$statistic)
ts
hist(ts, freq = FALSE, nclass = 25, col = "grey", ylim = c(0, 0.4),
xlab = "T statistic", ylab = "Density") # histogram
lines(density(ts), lty = 2, lwd = 2) # smooth density estimate
curve(dt(x, df = 8), from = -4.5, to = 4.5, add = TRUE,
col = "red", type = "l", lwd = 2) # theoretical density
probs <- c(0.9, 0.95, 0.99)
quantile(ts, probs)
## 90% 95% 99%
## 1.407738 1.849849 2.962914
qt(probs, df = 8)
## [1] 1.396815 1.859548 2.896459
pvals.welch <- replicate(1000, t.test(rnorm(10), rnorm(10))$p.value)
pvals.ttest <- replicate(1000, t.test(rnorm(10), rnorm(10),
var.equal = TRUE)$p.value)
par(mfrow = c(1, 2))
hist(pvals.welch, freq = FALSE, col = 8, xlab = "p-values", main = "Welch")
hist(pvals.ttest, freq = FALSE, col = 8, xlab = "p-values", main = "Pooled")
B <- 1000 # number of simulation runs
R <- 50 # number of power values
n <- 5 # sample sizes
delta.seq <- seq(-3, 3, length = R) # sequence of true differences
power.t <- numeric(R) # initialize power vectors
power.w <- numeric(R)
for (i in 1:R) {
delta <- delta.seq[i]
# Simulate B p-values for each test.
pvals.t <- replicate(B, t.test(rnorm(n), rnorm(n, delta),
var.equal = TRUE)$p.value)
pvals.w <- replicate(B, wilcox.test(rnorm(n), rnorm(n, delta),
exact = FALSE)$p.value)
# Record the estimated power (proportion of rejections).
power.t[i] <- mean(pvals.t < 0.05)
power.w[i] <- mean(pvals.w < 0.05)
}
plot(delta.seq, power.t, type = "l", ylim = c(0, 1),
ylab = "Power", xlab = expression(delta))
lines(delta.seq, power.w, lty = 2, col = 2)
abline(v = 0, lty = 3)
plot(delta.seq, power.t, type = "l", ylim = c(0, 1),
ylab = "Power", xlab = expression(delta))
lines(delta.seq, power.w, lty = 2, col = 2)
abline(v = 0, lty = 3)
x <- c(10,24,10,6,3)
x.bar <- mean(x)
p1 <- dpois(0,x.bar)
p2 <- dpois(1,x.bar)
p3 <- dpois(2,x.bar)
p4 <- dpois(3,x.bar)
p5 <- dpois(4,x.bar)
p <- c(p1,p2,p3,p4,p5)
chisq.test(x,p = p)
p5 <- 1- (p1 + p2 + p3 + p4)
p <- c(p1,p2,p3,p4,p5)
chisq.test(x,p = p)
1 - pchisq(118308,3)
# (a)
x <- rep(0:4, c(10,24,10,6,3))
table(x)
x.bar <- mean(x)
x.bar
prob = dpois(0:4,x.bar)
left = 1 - sum(probs)
left
probs = dpois(0:4,x.bar)
probs
left
left = 1 - sum(probs)
left
chisq.test(c(x,0),c(probs,left))
left = 1 - sum(probs)
chisq.test(c(x,0),c(probs,left))
chisq.test(c(10,24,10,6,3,0),c(probs,left))
x <- rbind(younger = c(zero_hour = 10, one_hour = 24,two_hour = 10, three_hour = 6, four_hour = 3),
older = c(zero_hour = 7, one_hour = 22,two_hour = 18, three_hour = 10, four_hour = 5))
x
chisq.test(x)
